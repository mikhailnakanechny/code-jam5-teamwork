{"version":3,"sources":["webpack:///./src/components/listOfWorks/listOfWorks.js","webpack:///./src/components/timeline/timeline.js","webpack:///./src/components/Video/video.js","webpack:///./src/components/Gallery/gallery.js","webpack:///./src/components/Map/map.js","webpack:///./src/pages/person-page.js"],"names":["ListOfWorks","props","_this","_Component","call","this","state","persons","Persons","concat","id","index","componentDidMount","setState","window","localStorage","getItem","parseInt","render","react_default","a","createElement","works","map","txt","key","toString","style","listStyle","Component","TimelinePerson","listItems","timelineBiography","d","ind","dist","String","dateText","date","event","lineColor","Video","_React$Component","isOpen","videoSrc","openModal","bind","assertThisInitialized_default","_this2","display","margin","lib_default","channel","videoId","onClose","Button","color","onClick","React","Gallery","slides","gallery","padding","textAlign","react_slick_lib_default","arrows","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","settings","slide","width","height","src","MapContainer","apply","arguments","inheritsLoose_default","prototype","markers","position","marginBottom","google_maps_react_dist","google","zoom","initialCenter","lat","lng","left","transform","onMapClicked","point","title","name","GoogleApiWrapper","apiKey","PersonPage","connect","setItem","personName","dateOfBirth","placeOfDeath","placeOfBirth","shortInfo","personPhoto","photo","personGallery","personVideo","video","personMap","layout","alt","timeline","Video_video","listOfWorks","gatsby_browser_entry","to","query","withI18next","withNamespaces"],"mappings":"0LAmCeA,cA/Bb,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAClBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,CACXC,QAAaC,EAANC,SACPC,GAAI,GACJC,MAAO,IALST,sCASpBU,6BACEP,KAAKQ,SAAS,CACZH,GAAII,OAAOC,aAAaC,QAAQ,MAChCL,MAAOM,SAASH,OAAOC,aAAaC,QAAQ,MAAO,SAIvDE,kBACE,OACEC,EAAAC,EAAAC,cAAA,UACGhB,KAAKC,MAAMK,MACRN,KAAKC,MAAMC,QAAQF,KAAKC,MAAMK,OAAOW,MAAMC,IAAI,SAACC,EAAKd,GAAN,OAC/CS,EAAAC,EAAAC,cAAA,MAAII,IAAKf,EAAGgB,WAAYC,MAAO,CAAEC,UAAW,WACzCJ,KAGH,UA1BcK,sBC+BXC,cA7Bb,SAAAA,EAAa7B,GAAO,IAAAC,EAAA,OAClBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,CACXC,QAAaC,EAANC,SACPC,GAAI,GACJC,MAAO,IALST,sCASpBU,6BACEP,KAAKQ,SAAS,CACZH,GAAII,OAAOC,aAAaC,QAAQ,MAChCL,MAAOM,SAASH,OAAOC,aAAaC,QAAQ,MAAO,SAIvDE,kBACE,IAAIa,EAAY1B,KAAKC,MAAMK,MACvBN,KAAKC,MAAMC,QAAQF,KAAKC,MAAMK,OAAOqB,kBAAkBT,IAAI,SAACU,EAAGC,GAAJ,OAC3Df,EAAAC,EAAAC,cAACc,EAAA,aAAD,CAAcV,IAAKW,OAAOF,GAAMG,SAAUJ,EAAEK,MAC1CnB,EAAAC,EAAAC,cAAA,KAAGI,IAAKW,OAAOF,IAAOD,EAAEM,UAG1B,KAEJ,OAAOpB,EAAAC,EAAAC,cAACc,EAAA,SAAD,CAAUK,UAAW,QAAST,OA1BZF,kEC2CdY,sBAxCb,SAAAA,EAAaxC,GAAO,IAAAC,EAAA,OAClBA,EAAAwC,EAAAtC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,CACXqC,QAAQ,EACRC,SAAU3C,GAEZC,EAAK2C,UAAY3C,EAAK2C,UAAUC,KAAfC,QAAA7C,KANCA,sCASpB2C,qBACExC,KAAKQ,SAAS,CAAE8B,QAAQ,OAG1BzB,kBAAU,IAAA8B,EAAA3C,KACR,OACEc,EAAAC,EAAAC,cAAA,OACEM,MAAO,CACLsB,QAAO,OACPC,OAAM,WAGR/B,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CACEgC,QAAQ,UACRT,OAAQtC,KAAKC,MAAMqC,OACnBU,QAAShD,KAAKC,MAAMsC,SAASA,SAC7BU,QAAS,kBAAMN,EAAKnC,SAAS,CAAE8B,QAAQ,OAEzCxB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEC,MAAM,iBACNC,QAASpD,KAAKwC,UACdlB,MAAO,CAAEuB,OAAQ,WAHnB,wBA5BYQ,IAAM7B,8BC8EX8B,6BA7Eb,SAAAA,EAAa1D,GAAO,IAAAC,EAAA,OAClBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,CACXsD,OAAQ3D,EAAM4D,SAHE3D,8BAOpBgB,kBAqCE,OACEC,EAAAC,EAAAC,cAAA,OACEM,MAAO,CACLmC,QAAO,gBAGT3C,EAAAC,EAAAC,cAAA,MACEM,MAAO,CACLoC,UAAS,WAFb,aAKA5C,EAAAC,EAAAC,cAAC2C,EAAA5C,EA/CY,CACf6C,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,aAAc,EACdC,WAAY,CACV,CACEC,WAAY,KACZC,SAAU,CACRL,aAAc,EACdC,eAAgB,EAChBH,UAAU,EACVD,MAAM,IAGV,CACEO,WAAY,IACZC,SAAU,CACRL,aAAc,EACdC,eAAgB,EAChBC,aAAc,IAGlB,CACEE,WAAY,IACZC,SAAU,CACRL,aAAc,EACdC,eAAgB,MAkBjBjE,KAAKC,MAAMsD,OAAOrC,IAAI,SAAAoD,GACrB,OACExD,EAAAC,EAAAC,cAAA,OAAKI,IAAKkD,EACRhD,MAAO,CACLiD,MAAK,QACLC,OAAM,SAGR1D,EAAAC,EAAAC,cAAA,OAAKyD,IAAKH,aAjEJ9C,uBCHTkD,EAAb,SAAA5E,GAAA,SAAA4E,IAAA,OAAA5E,EAAA6E,MAAA3E,KAAA4E,YAAA5E,KAAA,OAAA6E,IAAAH,EAAA5E,GAAA4E,EAAAI,UACEjE,OADF,WAEI,IAAMkE,EAAU/E,KAAKJ,MAAMmF,QAC3B,OACEjE,EAAAC,EAAAC,cAAA,OACEM,MAAO,CACLkD,OAAM,QACNQ,SAAQ,WACRC,aAAY,SAGdnE,EAAAC,EAAAC,cAACkE,EAAA,IAAD,CACEC,OAAQnF,KAAKJ,MAAMuF,OACnBC,KAAM,EACNC,cAAe,CAAEC,IAAK,UAAWC,IAAK,WACtCjE,MAAO,CACLiD,MAAO,MACPC,OAAQ,OACRQ,SAAU,WACVQ,KAAI,MACJC,UAAS,oBAEXrC,QAASpD,KAAK0F,cAEbX,EAAQ7D,IAAI,SAAAyE,GACX,OACE7E,EAAAC,EAAAC,cAACkE,EAAA,OAAD,CACE9D,IAAKuE,EAAML,IAAIjE,WACf2D,SAAU,CACRM,IAAKK,EAAML,IACXC,IAAKI,EAAMJ,KAEbK,MAAOD,EAAMC,MACbC,KAAMF,EAAME,YAjC5BnB,EAAA,CAAkClD,aA2CnBsE,6BAAiB,CAC9BC,OAAS,2CADID,CAEZpB,2CChCGsB,cACF,SAAAA,EAAapG,GAAO,IAAAC,EAAA,OAChBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,CACTgG,SAAS,GAHGpG,sCAOpBU,6BACIP,KAAKQ,SAAS,CACVyF,SAAS,OAIjBpF,kBACI,GAAIb,KAAKC,MAAMgG,QAAS,CACfxF,OAAOC,aAAaC,QAAQ,OAC7BF,OAAOC,aAAawF,QAAQ,KAAM,KAGtC,IAAI5F,EAAQM,SAASH,OAAOC,aAAaC,QAAQ,OAC7CwF,EAAahG,EAAQG,GAAOuF,KAC5BO,EAAcjG,EAAQG,GAAO8F,YAC7BC,EAAelG,EAAQG,GAAOgG,aAC9BC,EAAYpG,EAAQG,GAAOiG,UAC3BC,EAAcrG,EAAQG,GAAOmG,MAC7BC,EAAgBvG,EAAQG,GAAOkD,QAC/BmD,EAAcxG,EAAQG,GAAOsG,MAC7BC,EAAY1G,EAAQG,GAAOY,IAGnC,OAAQlB,KAAKC,MAAMgG,QAAQnF,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,KACvBhG,EAAAC,EAAAC,cAAA,MAAIM,MAAO,CAAEoC,UAAW,WAAayC,GACrCrF,EAAAC,EAAAC,cAAA,SACKmF,EADL,YAC0BC,EAD1B,aACiDC,EADjD,KACiEE,GAEjEzF,EAAAC,EAAAC,cAAA,KAAGM,MAAO,CAAEoC,UAAW,WACnB5C,EAAAC,EAAAC,cAAA,OAAKyD,IAAK+B,EAAaO,IAAKZ,EAAY3B,OAAO,SAEnD1D,EAAAC,EAAAC,cAACgG,EAAD,MACAlG,EAAAC,EAAAC,cAACwC,EAAD,CAASA,QAASkD,IAClB5F,EAAAC,EAAAC,cAACiG,EAAD,CAAO1E,SAAUoE,IACjB7F,EAAAC,EAAAC,cAACE,EAAD,CAAc6D,QAAS8B,IACvB/F,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACkG,EAAD,MACApG,EAAAC,EAAAC,cAACmG,EAAA,KAAD,CAAMC,GAAG,KAAT,kCACMtG,EAAAC,EAAAC,cAAA,gBA9COQ,aA8FZ6F,GAFEC,kCAAcC,2BAAiBvB,IAE5B","file":"component---src-pages-person-page-js-30b3fe73a6f3aff81a19.js","sourcesContent":["import Persons from '../../data/person_content'\r\nimport React, { Component } from 'react'\r\n\r\nclass ListOfWorks extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      persons: [...Persons],\r\n      id: '',\r\n      index: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({\r\n      id: window.localStorage.getItem('id'),\r\n      index: parseInt(window.localStorage.getItem('id'), 10)\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <ul>\r\n        {this.state.index\r\n          ? this.state.persons[this.state.index].works.map((txt, id) => (\r\n            <li key={id.toString()} style={{ listStyle: 'circle' }}>\r\n              {txt}\r\n            </li>\r\n          ))\r\n          : null}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListOfWorks\r\n","import { Timeline, TimelineItem } from 'vertical-timeline-component-for-react'\r\nimport Persons from './../../data/person_content'\r\nimport React, { Component } from 'react'\r\n\r\nclass TimelinePerson extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      persons: [...Persons],\r\n      id: '',\r\n      index: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({\r\n      id: window.localStorage.getItem('id'),\r\n      index: parseInt(window.localStorage.getItem('id'), 10)\r\n    })\r\n  }\r\n\r\n  render () {\r\n    let listItems = this.state.index\r\n      ? this.state.persons[this.state.index].timelineBiography.map((d, ind) => (\r\n        <TimelineItem key={String(ind)} dateText={d.date}>\r\n          <p key={String(ind)}>{d.event}</p>\r\n        </TimelineItem>\r\n      ))\r\n      : null\r\n\r\n    return <Timeline lineColor={'#ddd'}>{listItems}</Timeline>\r\n  }\r\n}\r\n\r\nexport default TimelinePerson\r\n","import React from 'react'\r\nimport ModalVideo from 'react-modal-video'\r\nimport { Button } from 'reactstrap'\r\n\r\nimport './video.css'\r\n\r\nclass Video extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      isOpen: false,\r\n      videoSrc: props\r\n    }\r\n    this.openModal = this.openModal.bind(this)\r\n  }\r\n\r\n  openModal () {\r\n    this.setState({ isOpen: true })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: `flex`,\r\n          margin: `3rem 0`\r\n        }}\r\n      >\r\n        <ModalVideo\r\n          channel='youtube'\r\n          isOpen={this.state.isOpen}\r\n          videoId={this.state.videoSrc.videoSrc}\r\n          onClose={() => this.setState({ isOpen: false })}\r\n        />\r\n        <Button\r\n          color='outline-danger'\r\n          onClick={this.openModal}\r\n          style={{ margin: '0 auto' }}\r\n        >Посмотеть видео</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// How to use\r\n// <Vidoe videoSrc={videoSrc}/> videoSrc === 'String'\r\n\r\nexport default Video\r\n","import React, { Component } from 'react'\r\nimport Slider from 'react-slick'\r\n\r\nimport './slick.css'\r\nimport './slick-theme.css'\r\n\r\nclass Gallery extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      slides: props.gallery\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const settings = {\r\n      arrows: true,\r\n      dots: true,\r\n      infinite: false,\r\n      speed: 500,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 4,\r\n      initialSlide: 0,\r\n      responsive: [\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 3,\r\n            slidesToScroll: 3,\r\n            infinite: true,\r\n            dots: true\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 600,\r\n          settings: {\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2,\r\n            initialSlide: 2\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1\r\n          }\r\n        }\r\n      ]\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          padding: `0 1rem 2rem`\r\n        }}\r\n      >\r\n        <h2\r\n          style={{\r\n            textAlign: `center`\r\n          }}\r\n        > Галерея </h2>\r\n        <Slider {...settings}>\r\n          {this.state.slides.map(slide => {\r\n            return (\r\n              <div key={slide}\r\n                style={{\r\n                  width: `100px`,\r\n                  height: `100%`\r\n                }}\r\n              >\r\n                <img src={slide}></img>\r\n              </div>\r\n            )\r\n          })}\r\n        </Slider>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// How to use\r\n// <Gallery gallery={gallery}/> gallery array with images\r\n\r\nexport default Gallery\r\n","import React, { Component } from 'react'\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react'\r\n\r\nexport class MapContainer extends Component {\r\n  render () {\r\n    const markers = this.props.markers\r\n    return (\r\n      <div\r\n        style={{\r\n          height: `300px`,\r\n          position: `relative`,\r\n          marginBottom: `1rem`\r\n        }}\r\n      >\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={6}\r\n          initialCenter={{ lat: 54.322518, lng: 31.075582 }}\r\n          style={{\r\n            width: '90%',\r\n            height: '100%',\r\n            position: 'relative',\r\n            left: `50%`,\r\n            transform: `translateX(-50%)`\r\n          }}\r\n          onClick={this.onMapClicked}\r\n        >\r\n          {markers.map(point => {\r\n            return (\r\n              <Marker\r\n                key={point.lat.toString()}\r\n                position={{\r\n                  lat: point.lat,\r\n                  lng: point.lng\r\n                }}\r\n                title={point.title}\r\n                name={point.name}\r\n              />\r\n            )\r\n          })}\r\n        </Map>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: ('AIzaSyAlredggxm1SRQcekdfVsk6oqFr4Wj-JnM')\r\n})(MapContainer)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { graphql } from 'gatsby';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { withI18next } from 'gatsby-plugin-i18next';\r\n\r\nimport ListOfWorks from '../components/listOfWorks/listOfWorks'\r\nimport TimelinePerson from '../components/timeline/timeline'\r\nimport Layout from '../components/layout';\r\n\r\nimport Persons from './../data/person_content'\r\nimport Video from '../components/Video/video'\r\nimport Gallery from '../components/Gallery/gallery'\r\nimport MapContainer from '../components/Map/map'\r\n\r\nclass PersonPage extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            connect: false\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.setState({\r\n            connect: true,\r\n        })\r\n    }\r\n\r\n    render () {\r\n        if (this.state.connect) {\r\n            if (!window.localStorage.getItem('id')) {\r\n                window.localStorage.setItem('id', '0')\r\n            }\r\n\r\n            var index = parseInt(window.localStorage.getItem('id'))\r\n            var personName = Persons[index].name\r\n            var dateOfBirth = Persons[index].dateOfBirth\r\n            var placeOfDeath = Persons[index].placeOfBirth\r\n            var shortInfo = Persons[index].shortInfo\r\n            var personPhoto = Persons[index].photo\r\n            var personGallery = Persons[index].gallery\r\n            var personVideo = Persons[index].video\r\n            var personMap = Persons[index].map\r\n        }\r\n\r\n        return (this.state.connect?<Layout>\r\n            <h1 style={{ textAlign: 'center' }}>{personName}</h1>\r\n            <p>\r\n                {personName} родился {dateOfBirth} в городе {placeOfDeath}. {shortInfo}\r\n            </p>\r\n            <p style={{ textAlign: 'center' }}>\r\n                <img src={personPhoto} alt={personName} height=\"300\"/>\r\n            </p>\r\n            <TimelinePerson/>\r\n            <Gallery gallery={personGallery}/>\r\n            <Video videoSrc={personVideo}/>\r\n            <MapContainer markers={personMap}/>\r\n            <h3>Работы</h3>\r\n            <ListOfWorks/>\r\n            <Link to=\"/\">Вернуться на главную страницу</Link>\r\n        </Layout>:<div></div>)\r\n    }\r\n}\r\n\r\n// export default PersonPage\r\n\r\n// class PersonPage extends React.Component {\r\n//   componentDidMount () {\r\n//     if (!window.localStorage.getItem('id')) {\r\n//       window.localStorage.setItem('id', '0')\r\n//       this.index = parseInt(window.localStorage.getItem('id'))\r\n//       this.personName = Persons[this.index].name\r\n//       this.dateOfBirth = Persons[this.index].dateOfBirth\r\n//       this.placeOfDeath = Persons[this.index].placeOfBirth\r\n//       this.shortInfo = Persons[this.index].shortInfo\r\n//       this.personPhoto = Persons[this.index].photo\r\n//       this.personGallery = Persons[this.index].gallery\r\n//       this.personVideo = Persons[this.index].video\r\n//       this.personMap = Persons[this.index].map\r\n//     }\r\n//   }\r\n//\r\n//   render () {\r\n//     return (\r\n//       <Layout>\r\n//         <h1 style={{ textAlign: 'center' }}>{this.personName}</h1>\r\n//         <p>\r\n//           {this.personName}\r\n//           родился\r\n//           {this.dateOfBirth} в городе {this.placeOfDeath}. {this.shortInfo}\r\n//         </p>\r\n//         <p style={{ textAlign: 'center' }}>\r\n//           <img src={this.personPhoto} alt={this.personName} height=\"300\"/>\r\n//         </p>\r\n//          <TimelinePerson/>\r\n//         {/* <Gallery gallery={this.personGallery}/> */}\r\n//         <Video videoSrc={this.personVideo}/>\r\n//         {/* <MapContainer markers={this.personMap}/> */}\r\n//         <h3>Работы</h3>\r\n//         <ListOfWorks/>\r\n//         <Link to=\"/\">Вернуться на главную страницу</Link>\r\n//       </Layout>\r\n//     )\r\n//   }\r\n// }\r\n\r\nexport default withI18next()(withNamespaces()(PersonPage));\r\n\r\nexport const query = graphql`\r\n  query($lng: String!) {\r\n    locales: allLocale(filter: { lng: { eq: $lng }, ns: { eq: \"messages\" } }) {\r\n      ...TranslationFragment\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}